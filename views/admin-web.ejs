<!DOCTYPE html>
<html lang="en">
    <head>
        <% include('components/admin-web/head') %>
    </head>
    <body class="sb-nav-fixed">
        <%- include('components/admin-web/navbar') %>
        <%- include('components/admin-web/sidenav') %>

        <!-- Modal Thêm/Chỉnh Sửa Truyện -->
        <% include('components/admin-web/comicModal') %>

        <!-- Modal Thêm/Chỉnh Sửa Chương -->
        <% include('components/admin-web/chapterModal') %>

        <!-- Modal Hiển Thị Chương -->
        <% include('components/admin-web/chapterDisplayModal') %>

        <!-- Modal Thêm/Chỉnh Sửa Người Dùng -->
        <% include('components/admin-web/userModal') %>

        <!-- Modal Thêm/Chỉnh Sửa Thể Loại -->
        <% include('components/admin-web/genreModal') %>

        <!-- Modal Thông Tin Tài Khoản -->
        <div class="modal fade" id="profileModal" tabindex="-1" aria-labelledby="profileModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="profileModalLabel">Thông Tin Tài Khoản</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <form id="profileForm">
                            <div class="text-center mb-4">
                                <div class="avatar-upload position-relative mx-auto" style="width: 150px; height: 150px;">
                                    <div class="avatar-circle" style="width: 150px; height: 150px;">
                                        <% if (user && user.avatar) { %>
                                            <img id="avatarPreview" src="<%= user.avatar %>" alt="<%= user.username %>" />
                                        <% } else { %>
                                            <span class="avatar-text" style="font-size: 48px;"><%= user.username.charAt(0).toUpperCase() %></span>
                                        <% } %>
                                    </div>
                                    <div class="position-absolute bottom-0 end-0">
                                        <label for="avatarUpload" class="btn btn-sm btn-primary rounded-circle">
                                            <i class="bi bi-camera"></i>
                                        </label>
                                        <input type="file" id="avatarUpload" class="d-none" accept="image/*">
                                    </div>
                                </div>
                            </div>
                            <div class="mb-3">
                                <label for="profileUsername" class="form-label">Tên Tài Khoản</label>
                                <input type="text" class="form-control" id="profileUsername" value="<%= user.username %>" readonly>
                            </div>
                            <div class="mb-3">
                                <label for="profileEmail" class="form-label">Email</label>
                                <input type="email" class="form-control" id="profileEmail" value="<%= user.email || '' %>">
                            </div>
                            <div class="mb-3">
                                <label for="profileRole" class="form-label">Vai Trò</label>
                                <input type="text" class="form-control" id="profileRole" value="<%= user.role_id === 1 ? 'Admin' : 'Người dùng' %>" readonly>
                            </div>
                            <button type="submit" class="btn btn-primary" id="profileSubmitButton">Cập Nhật</button>
                        </form>
                    </div>
                </div>
            </div>
        </div>

        <!-- Modal Đổi Mật Khẩu -->
        <div class="modal fade" id="changePasswordModal" tabindex="-1" aria-labelledby="changePasswordModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="changePasswordModalLabel">Đổi Mật Khẩu</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <form id="changePasswordForm">
                            <div class="mb-3">
                                <label for="currentPassword" class="form-label">Mật Khẩu Hiện Tại</label>
                                <input type="password" class="form-control" id="currentPassword" required>
                            </div>
                            <div class="mb-3">
                                <label for="newPassword" class="form-label">Mật Khẩu Mới</label>
                                <input type="password" class="form-control" id="newPassword" required>
                            </div>
                            <div class="mb-3">
                                <label for="confirmPassword" class="form-label">Xác Nhận Mật Khẩu Mới</label>
                                <input type="password" class="form-control" id="confirmPassword" required>
                            </div>
                            <button type="submit" class="btn btn-primary" id="changePasswordSubmitButton">Đổi Mật Khẩu</button>
                        </form>
                    </div>
                </div>
            </div>
        </div>

        <!-- Modal Thêm Người Dùng Vào Danh Sách Đen -->
        <div class="modal fade" id="addBlacklistModal" tabindex="-1" aria-labelledby="addBlacklistModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="addBlacklistModalLabel">Thêm Người Dùng Vào Danh Sách Đen</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <form id="addBlacklistForm">
                            <div class="mb-3">
                                <label for="blacklistUserId" class="form-label">ID Người Dùng</label>
                                <input type="number" class="form-control" id="blacklistUserId" required>
                            </div>
                            <div class="mb-3">
                                <label for="blacklistReason" class="form-label">Lý Do</label>
                                <textarea class="form-control" id="blacklistReason" rows="3" placeholder="Nhập lý do khóa tài khoản..."></textarea>
                            </div>
                            <button type="submit" class="btn btn-danger" id="blacklistSubmitButton">Thêm Vào Danh Sách Đen</button>
                        </form>
                    </div>
                </div>
            </div>
        </div>

        <!-- Modal Xem Chi Tiết Báo Cáo -->
        <div class="modal fade" id="reportDetailModal" tabindex="-1" aria-labelledby="reportDetailModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-lg">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="reportDetailModalLabel">Chi Tiết Báo Cáo</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <h6>ID Báo Cáo</h6>
                                    <p id="detailReportId" class="form-control bg-light">-</p>
                                </div>
                                <div class="mb-3">
                                    <h6>Người Dùng</h6>
                                    <p id="detailUsername" class="form-control bg-light">-</p>
                                </div>
                                <div class="mb-3">
                                    <h6>Email</h6>
                                    <p id="detailEmail" class="form-control bg-light">-</p>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <h6>Thời Gian Báo Cáo</h6>
                                    <p id="detailReportedAt" class="form-control bg-light">-</p>
                                </div>
                                <div class="mb-3">
                                    <h6>Trạng Thái</h6>
                                    <p id="detailStatus" class="form-control bg-light">-</p>
                                </div>
                                <div class="mb-3">
                                    <h6>Thời Gian Xử Lý</h6>
                                    <p id="detailProcessedAt" class="form-control bg-light">-</p>
                                </div>
                            </div>
                        </div>
                        <div class="mb-3">
                            <h6>Tiêu Đề</h6>
                            <p id="detailTitle" class="form-control bg-light">-</p>
                        </div>
                        <div class="mb-3">
                            <h6>Nội Dung</h6>
                            <div id="detailContent" class="form-control bg-light" style="min-height: 150px; overflow-y: auto;">-</div>
                        </div>
                        <div class="mb-3">
                            <h6>Ghi Chú Xử Lý</h6>
                            <textarea id="detailNotes" class="form-control" rows="3" placeholder="Nhập ghi chú xử lý..."></textarea>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
                        <button type="button" class="btn btn-warning" id="markAsPendingButton">Đánh Dấu Chờ Xử Lý</button>
                        <button type="button" class="btn btn-success" id="markAsProcessedButton">Đánh Dấu Đã Xử Lý</button>
                        <button type="button" class="btn btn-danger" id="deleteReportButton">Xóa Báo Cáo</button>
                    </div>
                </div>
            </div>
        </div>

        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js" crossorigin="anonymous"></script>
        <script src="/js/scripts.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/simple-datatables@7.1.2/dist/umd/simple-datatables.min.js" crossorigin="anonymous"></script>
        <script src="/js/datatables-simple-demo.js"></script>
        <script type="module" src="/js/admin-web/manager.js"></script>
        <script type="module" src="/js/admin-web/auth.js"></script>
        <script type="module" src="/js/admin-web/comics.js"></script>
        <script type="module" src="/js/admin-web/chapters.js"></script>
        <script type="module" src="/js/admin-web/users.js"></script>
        <script type="module" src="/js/admin-web/genres.js"></script>
        <script type="module" src="/js/admin-web/dashboard.js"></script>
        <script type="module" src="/js/admin-web/reports.js"></script>
        <script type="module" src="/js/admin-web/blacklist.js"></script>
        <script type="module" src="/js/admin-web/profile.js"></script>
        <script src="/js/index/login.js"></script>
        <script>
            // Khai báo các biến toàn cục
            window.selectedGenres = [];
            window.editSelectedGenres = [];
            window.isEditMode = false;
            window.currentComicGenres = [];
            window.allGenres = []; // Lưu trữ tất cả thể loại
        
            // Hàm khởi tạo danh sách thể loại
            window.initializeGenreList = async function() {
                try {
                    const token = localStorage.getItem('token');
                    if (!token) throw new Error('Không tìm thấy token');
        
                    // Kiểm tra xem allGenres đã có chưa
                    if (!window.allGenres || window.allGenres.length === 0) {
                        const response = await fetch('/api/genres', {
                            headers: {
                                'Authorization': `Bearer ${token}`,
                                'Content-Type': 'application/json'
                            }
                        });
        
                        if (!response.ok) throw new Error('Lỗi khi lấy danh sách thể loại');
                        window.allGenres = await response.json();
                    }
        
                    setupGenreAutocomplete();
                    updateSelectedGenresList();
                } catch (error) {
                    console.error('Lỗi trong initializeGenreList:', error);
                    alert('Không thể tải danh sách thể loại: ' + error.message);
                }
            };
        
            // Hàm thiết lập autocomplete cho input thể loại
            function setupGenreAutocomplete() {
                const genreInput = document.getElementById('genreInput');
                const suggestionsList = document.getElementById('genreSuggestions');
        
                // Xóa event listener cũ
                genreInput.oninput = function() {
                    const searchTerm = this.value.toLowerCase();
                    if (searchTerm.length < 1) {
                        suggestionsList.style.display = 'none';
                        return;
                    }
        
                    const matches = window.allGenres.filter(genre => 
                        genre.genre_name.toLowerCase().includes(searchTerm)
                    );
        
                    if (matches.length > 0) {
                        suggestionsList.innerHTML = matches.map(genre => `
                            <a href="#" class="list-group-item list-group-item-action" 
                               data-genre-id="${genre.genre_id}" 
                               data-genre-name="${genre.genre_name}">
                                ${genre.genre_name}
                            </a>
                        `).join('');
                        suggestionsList.style.display = 'block';
                    } else {
                        suggestionsList.style.display = 'none';
                    }
                };
        
                // Xóa event listener cũ và thêm mới cho suggestions
                suggestionsList.onclick = function(e) {
                    e.preventDefault();
                    if (e.target.tagName === 'A') {
                        const genreId = e.target.dataset.genreId;
                        const genreName = e.target.dataset.genreName;
                        addGenreToSelection(genreId, genreName);
                        genreInput.value = '';
                        suggestionsList.style.display = 'none';
                    }
                };
        
                // Xử lý nút thêm thể loại
                document.getElementById('addGenreToList').onclick = function() {
                    const searchTerm = genreInput.value.toLowerCase();
                    const matchedGenre = window.allGenres.find(genre => 
                        genre.genre_name.toLowerCase() === searchTerm
                    );
                    if (matchedGenre) {
                        addGenreToSelection(matchedGenre.genre_id, matchedGenre.genre_name);
                        genreInput.value = '';
                    }
                };
            }
        
            // Hàm thêm thể loại vào danh sách đã chọn
            function addGenreToSelection(genreId, genreName) {
                const targetArray = window.isEditMode ? window.editSelectedGenres : window.selectedGenres;
                if (!targetArray.includes(genreId)) {
                    targetArray.push(genreId);
                    updateSelectedGenresList();
                }
            }
        
            // Hàm cập nhật hiển thị danh sách thể loại đã chọn
            window.updateSelectedGenresList = function() {
                const selectedGenresList = document.getElementById('selectedGenresList');
                const targetArray = window.isEditMode ? window.editSelectedGenres : window.selectedGenres;
        
                if (!window.allGenres || window.allGenres.length === 0) {
                    selectedGenresList.innerHTML = '<span class="text-danger">Không thể tải thể loại</span>';
                    return;
                }
        
                selectedGenresList.innerHTML = targetArray.map(genreId => {
                    const genre = window.allGenres.find(g => g.genre_id.toString() === genreId.toString());
                    if (!genre) return '';
                    return `
                        <span class="badge bg-primary me-2 mb-2" style="font-size: 14px;">
                            ${genre.genre_name}
                            <button type="button" class="btn-close btn-close-white" 
                                    style="font-size: 0.5em;" 
                                    onclick="removeGenre('${genreId}')"
                                    aria-label="Remove"></button>
                        </span>
                    `;
                }).join('');
            };
        
            // Hàm xóa thể loại khỏi danh sách đã chọn
            window.removeGenre = function(genreId) {
                const targetArray = window.isEditMode ? window.editSelectedGenres : window.selectedGenres;
                const index = targetArray.indexOf(genreId);
                if (index > -1) {
                    targetArray.splice(index, 1);
                    updateSelectedGenresList();
                }
            };
        
            // Khởi tạo modal events
            const comicModal = document.getElementById('addComicModal');
            
            // Xóa event listeners cũ
            const newComicModal = comicModal.cloneNode(true);
            comicModal.parentNode.replaceChild(newComicModal, comicModal);

            // Thêm event listeners mới
            newComicModal.addEventListener('show.bs.modal', async () => {
                console.log('Modal opening, isEditMode:', window.isEditMode);
                await window.initializeGenreList();
            }, { once: true });

            newComicModal.addEventListener('hidden.bs.modal', () => {
                // Xóa backdrop và reset body
                document.querySelectorAll('.modal-backdrop').forEach(backdrop => backdrop.remove());
                document.body.classList.remove('modal-open');
                document.body.style.overflow = '';
                document.body.style.paddingRight = '';

                // Reset form và biến nếu không phải chế độ sửa
                if (!window.isEditMode) {
                    window.selectedGenres = [];
                    document.getElementById('comicId').value = '';
                    document.getElementById('comicTitle').value = '';
                    document.getElementById('comicImage').value = '';
                    document.getElementById('comicContent').value = '';
                    document.getElementById('comicLink').value = '';
                    document.getElementById('addComicModalLabel').textContent = 'Thêm Truyện Mới';
                    document.getElementById('comicSubmitButton').textContent = 'Thêm';
                }
                document.getElementById('genreInput').value = '';
                document.getElementById('genreSuggestions').style.display = 'none';
                updateSelectedGenresList();
            });
        
            // Thêm sự kiện cho nút đóng modal
            const closeButtons = newComicModal.querySelectorAll('[data-bs-dismiss="modal"]');
            closeButtons.forEach(button => {
                button.addEventListener('click', () => {
                    // Xóa backdrop và reset body
                    document.querySelectorAll('.modal-backdrop').forEach(backdrop => backdrop.remove());
                    document.body.classList.remove('modal-open');
                    document.body.style.overflow = '';
                    document.body.style.paddingRight = '';
                });
            });
        
            // Khởi tạo khi DOM được tải
            document.addEventListener('DOMContentLoaded', () => {
                console.log('DOM fully loaded and parsed');
            }, { once: true });
        </script>
    </body>
</html>